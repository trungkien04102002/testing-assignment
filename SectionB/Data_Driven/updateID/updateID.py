# Generated by Selenium IDE
import openpyxl
import time
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

from selenium.common.exceptions import NoSuchElementException

class FileExcelReader:
    file = ""
    sheetName = ""

    def __init__(self, file, sheetName):
        self.file = file
        self.sheetName = sheetName

    def getRowCount(self):
        wordbook = openpyxl.load_workbook(self.file)
        sheet = wordbook[self.sheetName]
        return (sheet.max_row)

    def getColumnCount(self):
        wordbook = openpyxl.load_workbook(self.file)
        sheet = wordbook[self.sheetName]
        return (sheet.max_column)

    def readData(self, rownum, colnum):
        wordbook = openpyxl.load_workbook(self.file)
        sheet = wordbook[self.sheetName]
        return sheet.cell(row=rownum, column=colnum).value

    def writeData(self, data, rownum, colnum):
        wordbook = openpyxl.load_workbook(self.file)
        sheet = wordbook[self.sheetName]
        sheet.cell(row=rownum, column=colnum).value = data
        wordbook.save(self.file)

class TestUpdateID():
    def setup_method(self):
        self.driver = webdriver.Chrome()
        self.driver.maximize_window()
        self.vars = {}
    
    def teardown_method(self):
        self.driver.quit()

    def first_step(self):
        self.driver.get('https://sso.hcmut.edu.vn/cas/login?service=http%3A%2F%2Fmybk.hcmut.edu.vn%2Fstinfo%2F')

        self.driver.find_element(By.NAME,"username").send_keys("hoang.nguyen392")
        self.driver.find_element(By.NAME,"password").send_keys("zmeb030902")
        self.driver.find_element(By.NAME,"submit").click()
        time.sleep(1)

        self.driver.find_element(By.XPATH,'/html/body/div[2]/div[2]/div/div/div[2]/div/div/div[2]/div/div/div/div/div/div/div/div/a').click()
        time.sleep(10)

        self.driver.find_element(By.ID, "menu-cmnd-edit").click()
        time.sleep(10)

    def test_updateID(self, id, place, date, expectedResult):
        self.first_step()
        idObj = self.driver.find_element(By.ID,"cmndEditCMND")
        placeObj = self.driver.find_element(By.ID,"cmndnoicapEditCMND")
        dateObj = self.driver.find_element(By.ID,"cmndngaycapEditCMND")
        self.driver.execute_script(f"arguments[0].setAttribute('value',{id})", idObj)
        self.driver.execute_script("arguments[0].setAttribute('value',{})".format(place), placeObj)
        self.driver.execute_script(f"arguments[0].setAttribute('value',{date})", dateObj)
        
        self.driver.find_element(By.ID,"btn_save_cmnd").click()

        if expectedResult == "Success":
            time.sleep(10)
            self.driver.find_element(By.XPATH,'/html/body/div[5]')

        else:
            time.sleep(1)
            self.driver.find_element(By.CLASS_NAME,"disabled")

        time.sleep(1)
        self.driver.get('https://mybk.hcmut.edu.vn/stinfo/logout')
        time.sleep(1)

if __name__ == "__main__":
    excel = FileExcelReader('SecB_updateid_data.xlsx', 'Sheet1')
    test = TestUpdateID()
    test.setup_method()
    nRows = excel.getRowCount()
    for row in range(2, nRows + 1):
        id = excel.readData(row,1)
        place = excel.readData(row,2)
        date = excel.readData(row,3)
        expectedResult = excel.readData(row,4)
        print(id, place, date)
        if id is None:
            id = ""
        if place is None:
            place = ""
        if date is None:
            date = ""

        try:
            result = test.test_updateID(id, place, date, expectedResult)
            excel.writeData("Passed",row,5)
        except:
            excel.writeData("Failed",row,5)

    test.teardown_method()