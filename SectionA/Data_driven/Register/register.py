# Generated by Selenium IDE
import openpyxl
import time
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

from selenium.common.exceptions import NoSuchElementException

count = 0 
class FileExcelReader:
    file = ""
    sheetName = ""

    def __init__(self, file, sheetName):
        self.file = file
        self.sheetName = sheetName

    def getRowCount(self):
        wordbook = openpyxl.load_workbook(self.file)
        sheet = wordbook[self.sheetName]
        return (sheet.max_row)

    def getColumnCount(self):
        wordbook = openpyxl.load_workbook(self.file)
        sheet = wordbook[self.sheetName]
        return (sheet.max_column)

    def readData(self, rownum, colnum):
        wordbook = openpyxl.load_workbook(self.file)
        sheet = wordbook[self.sheetName]
        return sheet.cell(row=rownum, column=colnum).value

    def writeData(self, data, rownum, colnum):
        wordbook = openpyxl.load_workbook(self.file)
        sheet = wordbook[self.sheetName]
        sheet.cell(row=rownum, column=colnum).value = data
        wordbook.save(self.file)

class TestRegister():
  def setup_method(self):
    self.driver = webdriver.Chrome()
    self.driver.maximize_window()
    self.vars = {}
  
  def teardown_method(self):
    self.driver.quit()
  
#   def check_exists_by_xpath(xpath):
#     try:
#         webdriver.find_element_by_xpath(xpath)
#     except NoSuchElementException:
#         return False
#     return True

  def test_register(self,username,fname,lname,email,phone,password,rpassword,address, expectedResult):
    self.driver.get('http://localhost:8000/registration.php')
    usernameInput = self.driver.find_element(By.NAME,"username")
    fnameInput= self.driver.find_element(By.NAME,"firstname")
    lnameInput = self.driver.find_element(By.NAME,"lastname")
    emailInput = self.driver.find_element(By.NAME,"email")
    phoneInput = self.driver.find_element(By.NAME,"phone")
    passwordInput = self.driver.find_element(By.NAME,"password")
    rpassworInput = self.driver.find_element(By.NAME,"cpassword")
    addressInput = self.driver.find_element(By.NAME,"address")
    submitBtn = self.driver.find_element(By.NAME,"submit")
    usernameInput.send_keys(username)
    fnameInput.send_keys(fname)
    lnameInput.send_keys(lname)
    emailInput.send_keys(email)
    phoneInput.send_keys(phone)
    passwordInput.send_keys(password)
    rpassworInput.send_keys(rpassword)
    addressInput.send_keys(address)
    submitBtn.click()
    time.sleep(6)
    if expectedResult == "Success": #tc1
        assert self.driver.current_url == 'http://localhost:8000/login.php'
        createAccountBtn = self.driver.find_element(By.XPATH,'/html/body/div[2]/div[3]/a')
        createAccountBtn.click()
        return True
    elif expectedResult == "InvalidEmailSyntax": #tc2
        errorNotification = self.driver.find_element(By.XPATH,'/html/body/div/div/div/ul/li/a/span[1]')
        assert (errorNotification.text =="Invalid email address please type a valid email!")
        return True
    elif expectedResult == "EmailExist": #tc3
        errorNotification = self.driver.find_element(By.XPATH,'/html/body/div/div/div/ul/li/a/span[1]')
        assert (errorNotification.text =="Email Already exists!")
        return True
    elif expectedResult == "MissedField":  #tc4
        errorNotification = self.driver.find_element(By.XPATH,'/html/body/div/div/div/ul/li/a/span[1]')
        assert (errorNotification.text =="All fields must be Required!")
        return True
    elif expectedResult == "UsernameExist": #tc5
        errorNotification = self.driver.find_element(By.XPATH,'/html/body/div/div/div/ul/li/a/span[1]')
        assert (errorNotification.text =="username Already exists!")
        return True
    elif expectedResult == "LengthPhoneError": #tc10
        errorNotification = self.driver.find_element(By.XPATH,'/html/body/div/div/div/ul/li/a/span[1]')
        assert (errorNotification.text =="invalid phone number")
        return True
    elif expectedResult == "InvalidPhoneSyntax": #tc11
        errorNotification = self.driver.find_element(By.XPATH,'/html/body/div/div/div/ul/li/a/span[1]')
        assert (errorNotification.text =="invalid phone number")
        return True
    elif expectedResult == "LengthPwdError": #tc13
        errorNotification = self.driver.find_element(By.XPATH,'/html/body/div/div/div/ul/li/a/span[1]')
        assert (errorNotification.text == "Password Must be >=6")
        return True    
    else:   #tc 15    
        errorNotification = self.driver.find_element(By.XPATH,'/html/body/div/div/div/ul/li/a/span[1]')
        assert (errorNotification.text =="Password not match")
        return True


if __name__ == "__main__":
    excel = FileExcelReader('Book1.xlsx', 'Sheet1')

    test = TestRegister()
    test.setup_method()
    nRows = excel.getRowCount()
    for row in range(2, nRows+1):
        username = str(excel.readData(row,1))
        fname = str(excel.readData(row,2))
        lname = str(excel.readData(row,3))
        email = str(excel.readData(row,4))
        phone = str(excel.readData(row,5))
        password = str(excel.readData(row,6))
        rpassword = str(excel.readData(row,7))
        address = str(excel.readData(row,8))
        expectedResult = excel.readData(row,9)
        print(username)
        print(fname)
        print(email)
        if username is None:
            username = ""
        if fname is None:
            fname = ""
        if lname is None:
            lname = ""
        if email is None:
            email = ""
        if phone is None:
            phone = ""
        if password is None:
            password = ""    
        if rpassword is None:
            rpassword = ""    
        if address is None:
            address = ""  
        try:
            result = test.test_login(username,fname,lname,email,phone,password,rpassword,address,expectedResult)
            excel.writeData("Passed",row,10)
        except:
            excel.writeData("Failed",row,10)
        count=count+1


    test.teardown_method()