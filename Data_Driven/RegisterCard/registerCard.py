# Generated by Selenium IDE
import openpyxl
import time
import os
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
from selenium.webdriver.support.ui import Select

from selenium.common.exceptions import NoSuchElementException

class FileExcelReader:
    file = ""
    sheetName = ""

    def __init__(self, file, sheetName):
        self.file = file
        self.sheetName = sheetName

    def getRowCount(self):
        wordbook = openpyxl.load_workbook(self.file)
        sheet = wordbook[self.sheetName]
        return (sheet.max_row)

    def getColumnCount(self):
        wordbook = openpyxl.load_workbook(self.file)
        sheet = wordbook[self.sheetName]
        return (sheet.max_column)

    def readData(self, rownum, colnum):
        wordbook = openpyxl.load_workbook(self.file)
        sheet = wordbook[self.sheetName]
        return sheet.cell(row=rownum, column=colnum).value

    def writeData(self, data, rownum, colnum):
        wordbook = openpyxl.load_workbook(self.file)
        sheet = wordbook[self.sheetName]
        sheet.cell(row=rownum, column=colnum).value = data
        wordbook.save(self.file)

class TestRegisterSTCard():
    def setup_method(self):
        self.driver = webdriver.Chrome()
        self.driver.maximize_window()
        self.vars = {}
        self.driver.get("https://mybk.hcmut.edu.vn/my/logoutSSO.action")
        self.driver.get('https://sso.hcmut.edu.vn/cas/login?service=https://mybk.hcmut.edu.vn/my/homeSSO.action')
        username = self.driver.find_element(By.NAME,"username")
        password = self.driver.find_element(By.NAME,"password")  
        submitBtn = self.driver.find_element(By.NAME,"submit")  
        
        username.send_keys("huy.dangquang")
        password.send_keys("0854001109")
        submitBtn.click()
  
    def teardown_method(self):
        self.driver.get("https://mybk.hcmut.edu.vn/my/homeSSO.action")
        logoutBtn = self.driver.find_element(By.XPATH,"/html/body/div[2]/div/div/div[2]/div/a[1]")
        logoutBtn.click()
        self.driver.quit()
  
  
    def test_registercard(self,flow, name, phoneNumber, address, validate, expectedResult):
        time.sleep(2)
        self.driver.get('https://mybk.hcmut.edu.vn/app/')
        self.driver.get('https://mybk.hcmut.edu.vn/app/sinh-vien/in-the-sinh-vien/dang-ky')

        if flow == "Normal":
            selectAdd = self.driver.find_element(By.ID,'select2-cboNoiNhan-container')
            selectAdd.click()
            addCs2 = self.driver.find_element(By.XPATH,'/html/body/span/span/span[2]/ul/li[3]')
            addCs2.click()
            submitbtn = self.driver.find_element(By.XPATH,'//*[@id="btnDangKy"]')
            submitbtn.click()
            assert self.driver.find_element(By.XPATH,'/html/body/div[4]/div')

        elif flow == "InvalidAddress":
            submitbtn = self.driver.find_element(By.XPATH,'//*[@id="btnDangKy"]')
            submitbtn.click()
            resubmit = self.driver.find_element(By.XPATH,'/html/body/div[4]/div/div[3]/button[1]')
            resubmit.click()
            annoucetext = self.driver.find_element(By.XPATH,'//*[@id="swal2-content"]')
            assert annoucetext.text=="Bạn chưa chọn nơi nhận kết quả"

        else:
            selectAdd = self.driver.find_element(By.ID,'select2-cboNoiNhan-container')
            selectAdd.click()
            time.sleep(1)
            addSelect = self.driver.find_element(By.XPATH,'/html/body/span/span/span[2]/ul/li[1]')
            addSelect.click()
            time.sleep(1)
            receiver = self.driver.find_element(By.ID,'txtTenNguoiNhan')
            receiver.send_keys(name)
            time.sleep(1)
            numberphone = self.driver.find_element(By.ID,'txtSoDienThoai')
            numberphone.send_keys(phoneNumber)
            time.sleep(1)
            addresst = self.driver.find_element(By.ID,'txtDiaChi')
            addresst.send_keys(address)
            time.sleep(1)
            if validate == "true":
                valiate = self.driver.find_element(By.XPATH,'//*[@id="chkCamKet"]')
                valiate.click()
                time.sleep(1)
            submitbtn = self.driver.find_element(By.XPATH,'//*[@id="btnDangKy"]')
            submitbtn.click()
            time.sleep(1)

            if expectedResult == "Success":
                time.sleep(2)
                assert self.driver.find_element(By.XPATH,'/html/body/div[4]/div')      

            elif expectedResult == "NoReceiver":
                time.sleep(2)
                resubmit = self.driver.find_element(By.XPATH,'/html/body/div[4]/div/div[3]/button[1]')
                resubmit.click()
                time.sleep(2)
                annoucetext = self.driver.find_element(By.XPATH,'//*[@id="swal2-content"]')
                assert annoucetext.text=="Nhập họ và tên người nhận"

            elif expectedResult == "NoPhonenumber":
                time.sleep(2)
                resubmit = self.driver.find_element(By.XPATH,'/html/body/div[4]/div/div[3]/button[1]')
                resubmit.click()
                time.sleep(2)
                annoucetext = self.driver.find_element(By.XPATH,'//*[@id="swal2-content"]')
                assert annoucetext.text=="Nhập số điện thoại người nhận"

            elif expectedResult == "InvalidPhonenumber":
                time.sleep(2)
                resubmit = self.driver.find_element(By.XPATH,'/html/body/div[4]/div/div[3]/button[1]')
                resubmit.click()
                time.sleep(2)
                annoucetext = self.driver.find_element(By.XPATH,'//*[@id="swal2-content"]')
                assert annoucetext.text=="Số điện thoại không được xác thực"

            elif expectedResult == "NoAddress":
                time.sleep(2)
                resubmit = self.driver.find_element(By.XPATH,'/html/body/div[4]/div/div[3]/button[1]')
                resubmit.click()
                time.sleep(2)
                annoucetext = self.driver.find_element(By.XPATH,'//*[@id="swal2-content"]')
                assert annoucetext.text=="Nhập địa chỉ nhận kết quả đăng ký"

            else:
                time.sleep(2)
                resubmit = self.driver.find_element(By.XPATH,'/html/body/div[4]/div/div[3]/button[1]')
                resubmit.click()
                time.sleep(2)
                annoucetext = self.driver.find_element(By.XPATH,'//*[@id="swal2-content"]')
                assert annoucetext.text=="Bạn chưa xác nhận địa chỉ gửi kết quả"      

if __name__ == "__main__":
    excel = FileExcelReader('SecB_registerCard_data.xlsx', 'Sheet1')

    test = TestRegisterSTCard()
    test.setup_method()
    nRows = excel.getRowCount()
    for row in range(2, nRows + 1):
        flow = excel.readData(row,1)
        name = excel.readData(row,2)
        phoneNumber = excel.readData(row, 3)
        address = excel.readData(row,4)
        validate = excel.readData(row,5)
        expectedResult = excel.readData(row,6)


        if address is None:
            address = ""
        if name is None:
            name = ""
        if phoneNumber is None:
            phoneNumber = ""
        if validate is None:
            validate = ""

        try:
            result = test.test_registercard(flow, name, phoneNumber, address, validate, expectedResult)
            excel.writeData("Passed",row,7)
        except:
            excel.writeData("Failed",row,7)


    test.teardown_method()